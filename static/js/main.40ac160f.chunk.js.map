{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onMovieAdd","isRepeat","setIsRepeat","useState","setQuerie","error","setError","isLoaded","setIsLoaded","preview","setPreview","findMovie","a","response","Poster","Title","Plot","imdbID","finally","htmlFor","type","value","id","placeholder","classNames","onChange","e","movieName","target","disabled","onClick","preventDefault","style","opacity","transition","cursor","App","setMovies","newMovie","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40ac160f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return movie\n    ? (\n      <div className=\"card\" data-cy=\"movieCard\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              data-cy=\"moviePoster\"\n              src={movie.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"movieDescription\">\n            {movie.description}\n            <br />\n            <a href={movie.imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    ) : null;\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6f8d2a14';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void,\n  isRepeat: boolean,\n  setIsRepeat: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onMovieAdd,\n  isRepeat,\n  setIsRepeat,\n}) => {\n  const [query, setQuerie] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [preview, setPreview] = useState<Movie | null>(null);\n\n  const findMovie = async () => {\n    await getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setError(true);\n\n          return;\n        }\n\n        const imgUrl = response.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : response.Poster;\n\n        setPreview({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl,\n          imdbId: response.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        });\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoaded(false));\n  };\n\n  function handleInputChange(movieName: string) {\n    setQuerie(movieName);\n    setError(false);\n    setIsRepeat(false);\n  }\n\n  function handleFindBtnClick(e: React.MouseEvent) {\n    e.preventDefault();\n    setPreview(null);\n    setIsLoaded(true);\n    setError(false);\n    findMovie();\n  }\n\n  function handleAddBtnClick() {\n    if (!preview) {\n      return;\n    }\n\n    setPreview(null);\n    setQuerie('');\n    onMovieAdd(preview);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': error,\n                },\n              )}\n              onChange={(e) => handleInputChange(e.target.value)}\n            />\n          </div>\n          {(error && query)\n            && (\n              <p\n                className=\"help is-danger\"\n                data-cy=\"errorMessage\"\n              >\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          {isRepeat\n            && (\n              <p\n                className=\"help is-danger\"\n                data-cy=\"errorMessage\"\n              >\n                This movie already exists in the MovieList\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={query === ''}\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isLoaded,\n                },\n              )}\n              onClick={handleFindBtnClick}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary button\"\n              style={\n                preview\n                  ? { opacity: 1, transition: '0.5s' }\n                  : { opacity: 0, transition: '0.3s', cursor: 'default' }\n              }\n              onClick={handleAddBtnClick}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard movie={preview} />\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isRepeat, setIsRepeat] = useState(false);\n\n  const handleMovieAdd = (newMovie: Movie) => {\n    const isMatchMovie = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (isMatchMovie) {\n      setIsRepeat(true);\n\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onMovieAdd={handleMovieAdd}\n          isRepeat={isRepeat}\n          setIsRepeat={setIsRepeat}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}